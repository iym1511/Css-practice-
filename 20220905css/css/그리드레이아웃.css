div{
    border: 3px solid red;
}
.wrapper {
    display: grid;
    /*
        grid-template-columns: 
        columns의 갯수와 크기를 지정
        1. 크기여러번 적어서 개수지정
        2. 동일한 크기일 경우 repeat를 이용해서 개수지정
    */
    grid-template-columns: repeat(3, 1fr);/*fr:프레임*/
    grid-gap: 10px; /*그리드 요소사이의 간격*/
    grid-auto-rows: minmax(100px, auto);/*row의 크기기지정, 개수는 자동 지정*/
    /* grid-template-rows: 100px 100px 100px; */
  }
  /*세로 : 칼럼 가로: 로우*/
  .one {
    /*각 라인의 시작위치와 끝위치를 작성하여 크기작성*/
    grid-column: 1 / 3; /*가로줄 1부터 3까지의 너비값*/
    grid-row: 1; /*세로줄*/
  }
  .two {
    grid-column: 2 / 4;
    grid-row: 1 / 3; /*1줄부터3줄까지 칸먹음*/
  }
  .three {
    grid-column: 1;
    grid-row: 2 / 5; /*2줄부터5줄까지 칸먹음*/
  }
  .four {
    grid-column: 3;
    grid-row: 3; /*3번쨰칸 먹음*/
  }
  .five {
    grid-column: 2;
    grid-row: 4;
  }
  .six {
    grid-column: 3;
    grid-row: 4;
  }


/* 그리드 레이아웃의 정렬 */
.grid-container{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* 
    정렬을 사용할 때 높이를 지정해야 
    아이템의 위치를 정렬해줄수 있다
    높이를 지정하지 않으면 아이템의 크기에 자동으로 맞춤
    */
    height: 300px;
    /* 아이템의 크기가 고정되어 아이템이 나가지않게 하기위함 */
    min-width: 316px;
    /* 기본설정 : stretch */
    /* 가로 정렬 */
    justify-items: flex-end;/*오른쪽 끝에 붙음*/
    /* 세로 정렬 : 전체가 이동*/
    align-content: stretch;
}
.grid-item{
    /* 아이템의 크기를 설정하지 않으면
    자동으로 그리드 컨테이너의 크기에 맞춰서 들어간다. */
    width: 100px;
    height: 50px;
}
.add-align{
    /* 개별 세로정렬 : 전체 align 이 stretch일때 사용*/
    background-color: cornflowerblue;
    align-self: center;
    /* 개발 가로정렬 */
    justify-self: left;
}
/* flex는 하나정렬 grid는 단체정렬 */